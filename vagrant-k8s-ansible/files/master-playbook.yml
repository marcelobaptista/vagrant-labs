---
- hosts: all
  become: true
  tasks:
  - name: Instalando pacotes de pré-requisitos
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Adicionando chave de assinatura apt para o Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Adicionando repositório apt para o Docker
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
      state: present

  - name: Instalando Docker e suas dependências
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status

  - name: Adicionando usuário vagrant ao grupo docker
    user:
      name: vagrant
      group: docker

  - name: Configurando systemd para gerenciar o Docker
    shell:
      cmd: |
        cat > /etc/docker/daemon.json << EOF
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-driver": "json-file",
          "log-opts": {
            "max-size": "100m"
          },
          "storage-driver": "overlay2"
        }
        EOF

  - name: Reiniciando o serviço docker
    service:
      name: docker
      daemon_reload: yes
      state: restarted

  - name: Removendo arquivo swap
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Desabilitando swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Adicionando chave de assinatura apt para o Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adicionando repositório apt para o Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Instalando Kubernetes
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: Configurando o IP do node
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
      create: yes

  - name: Reiniciando serviço kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Inicializando cluster Kubernetes
    command: kubeadm init --apiserver-advertise-address="192.168.56.10" --apiserver-cert-extra-sans="192.168.56.10"  --node-name k8s-master --pod-network-cidr=192.168.56.0/21
    become: yes

  - name: Configurando kubeconfig para o usuário vagrant
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/vagrant/.kube
     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
     - chown vagrant:vagrant /home/vagrant/.kube/config

  - name: Instalando calico
    become: false
    command: kubectl create -f https://docs.projectcalico.org/manifests/calico.yaml

  - name: Gerando token
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copiando token para o arquivo join-command
    become: false
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

  handlers:
    - name: docker status
      service: name=docker state=started

